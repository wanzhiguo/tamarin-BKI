maude tool: 'maude'
 checking version: 2.7. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ...failed with exit code 1

SAPIC not found.
SAPIC files will not be supported.

Detailed results from testing 'which'
 command: which sapic
 stdin:   
 stdout:

 stderr:


theory BKI_protocol_security begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: adec/2, aenc/2, false/0, fst/1, h/1, pair/2, pk/1, sdec/2,
           senc/2, sign/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true

restriction Unique:
  "∀ x #i #j. ((Uniq( x ) @ #i) ∧ (Uniq( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction InEq:
  "¬(∃ x #i. InEq( x, x ) @ #i)"
  // safety formula

restriction types_distinct:
  "∀ t1 t2 x #i #j.
    ((Is_Type( t1, x ) @ #i) ∧ (Is_Type( t2, x ) @ #j)) ⇒ (t1 = t2)"
  // safety formula

restriction eq_check_succeed:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction neq_check_succeed:
  "∀ x y #i. (Neq( x, y ) @ #i) ⇒ (¬(x = y))"
  // safety formula

restriction notin_check_succeed:
  "∀ x l #i. (NotIn( x, l ) @ #i) ⇒ (¬(∃ rest. (rest+x) = l))"
  // safety formula

restriction in_check_succeed:
  "∀ x l #i. (IsIn( x, l ) @ #i) ⇒ (∃ rest. (rest+x) = l)"

restriction subseteq_check_succeed:
  "∀ l m #i. (SubsetEq( l, m ) @ #i) ⇒ ((l = m) ∨ (∃ rest. (l+rest) = m))"

rule (modulo E) INIT_SYSTEM_PARAMS:
   [ In( <'INITSYS', ('1'+'1'+'1'+'1'+'1'), ('1'+'1'+'1'), ('1'+'1')> ) ]
  --[
  SubsetEq( ('1'+'1'+'1'), ('1'+'1'+'1'+'1'+'1') ),
  SubsetEq( ('1'+'1'), ('1'+'1'+'1') ),
  InEq( ('1'+'1'+'1'+'1'+'1'), 'nil' ), InEq( ('1'+'1'+'1'), 'nil' ),
  Uniq( 'INITSYS' )
  ]->
   [
   !PubParams( ('1'+'1'+'1'+'1'+'1'), ('1'+'1'+'1'), ('1'+'1') ),
   L_Compromised_CAs( 'nil' ),
   Out( <('1'+'1'+'1'+'1'+'1'), ('1'+'1'+'1'), ('1'+'1')> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) INIT_BLM:
   [ Fr( ~ltkB ) ]
  --[ Is_Type( 'BLM', $B ), Uniq( 'INITBLM' ) ]->
   [
   !Ltk( $B, ~ltkB ), !Pk( $B, pk(~ltkB) ), StStateInitBLM( $B, pk(~ltkB) ),
   Blog( $B, 'nil' ), Out( pk(~ltkB) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) INIT_CA:
   [ In( <'Init_CA', CAid, $CA> ), Fr( ~ltkCA ), !PubParams( n, k, t ) ]
  --[
  Is_Type( 'CA', $CA ), Uniq( <'CA', $CA> ), Uniq( <'CA', CAid> ),
  IsIn( CAid, ('1'+n) )
  ]->
   [
   !Ltk( $CA, ~ltkCA ), !Pk( $CA, pk(~ltkCA) ), !Pmap( CAid, $CA ),
   Out( pk(~ltkCA) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) COMPROMISE_CA:
   [ !Ltk( $CA, ltkCA ), L_Compromised_CAs( Compromised_CA_List ) ]
  --[
  Is_Type( 'CA', $CA ), Uniq( <'Compromise_CA', $CA> ),
  Compromise_CA( $CA, ltkCA )
  ]->
   [ L_Compromised_CAs( ('1'+Compromised_CA_List) ), Out( ltkCA ) ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) COMPROMISE_k_CAs:
   [ !PubParams( n, k, t ), L_Compromised_CAs( Compromised_CA_List ) ]
  --[
  Eq( ('nil'+k), Compromised_CA_List ),
  K_CAs_Compromised( Compromised_CA_List )
  ]->
   [ L_Compromised_CAs( Compromised_CA_List ) ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) COMPROMISE_t_CAs:
   [ !PubParams( n, k, t ), L_Compromised_CAs( Compromised_CA_List ) ]
  --[
  Eq( ('nil'+t), Compromised_CA_List ),
  T_CAs_Compromised( Compromised_CA_List )
  ]->
   [ L_Compromised_CAs( Compromised_CA_List ) ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) COMPROMISE_BLM:
   [ !Ltk( $B, ltkB ) ]
  --[ Is_Type( 'BLM', $B ), Compromise_BLM( $B, ltkB ) ]->
   [ Out( ltkB ), StCompromisedBLM( $B, ltkB ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) INIT_DOMAIN:
   [ Fr( ~ltkD ), Fr( ~Did ) ]
  --[ Is_Type( 'Domain', $D ), Uniq( <'Init_Domain', $D> ) ]->
   [
   !Ltk( $D, ~ltkD ), !Pk( $D, pk(~ltkD) ), !DomainInfo( $D, ~Did ),
   Sigs_List( $D, ~Did, pk(~ltkD), 'nil', 'nil' ),
   L_Sigs_Check_List( $D, ~Did, pk(~ltkD), 'nil' ),
   Sigs_Revoke_List( $D, ~Did, pk(~ltkD), 'nil', 'nil' ),
   L_Sigs_Revoke_Check_List( $D, ~Did, pk(~ltkD), 'nil' ), Out( ~Did ),
   Out( pk(~ltkD) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) COMPROMISE_DOMAIN:
   [ !Ltk( $D, ltkD ) ]
  --[
  Is_Type( 'Domain', $D ), Uniq( <'Compromise_Domain', $D> ),
  Compromise_Domain( $D, ltkD )
  ]->
   [ Out( ltkD ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DOMAIN_REQUEST_SIG_0:
   [ !DomainInfo( $D, Did ), !Pk( $D, ltpkD ) ]
  --[ Is_Type( 'Domain', $D ) ]->
   [ Out( <$D, $CA, 'RequestCert', $D, Did, ltpkD> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) CA_GENERATE_SIG_1:
   [
   In( <$D, $CA, 'RequestCert', $D, Did, ltpkD> ), !Ltk( $CA, ltkCA ),
   !Pk( $D, ltpkD ), !DomainInfo( $D, Did )
   ]
  --[
  Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
  Uniq( <'ObtainSig', $D, Did, $CA> )
  ]->
   [ Out( <$CA, $D, sign(<'DomainCert', $D, Did, ltpkD>, ltkCA)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) BLM_CHECK_CERT_REQUEST_2:
   [
   In( Sig ), In( ltpkD ), In( Did ),
   L_Sigs_Check_List( $D, Did, ltpkD, Sigs_Checked ), !Pk( $CA, ltpkCA )
   ]
  --[
  Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
  Uniq( <'BLM_CheckSig', $D, Did, $CA> ),
  Eq( verify(Sig, <'DomainCert', $D, Did, ltpkD>, ltpkCA), true )
  ]->
   [ L_Sigs_Check_List( $D, Did, ltpkD, ('1'+Sigs_Checked) ) ]

  // loop breaker: [3]
  /*
  rule (modulo AC) BLM_CHECK_CERT_REQUEST_2:
     [
     In( Sig ), In( ltpkD ), In( Did ),
     L_Sigs_Check_List( $D, Did, ltpkD, Sigs_Checked ), !Pk( $CA, ltpkCA )
     ]
    --[
    Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
    Uniq( <'BLM_CheckSig', $D, Did, $CA> ), Eq( z, true )
    ]->
     [ L_Sigs_Check_List( $D, Did, ltpkD, ('1'+Sigs_Checked) ) ]
    variants (modulo AC)
    1. $D    = $D.19
       Did   = Did.20
       Sig   = Sig.21
       ltpkCA
             = ltpkCA.23
       ltpkD = ltpkD.24
       z     = verify(Sig.21, <'DomainCert', $D.19, Did.20, ltpkD.24>,
                      ltpkCA.23)
    
    2. $D    = $D.49
       Did   = Did.50
       Sig   = sign(<'DomainCert', $D.49, Did.50, ltpkD.54>, x.95)
       ltpkCA
             = pk(x.95)
       ltpkD = ltpkD.54
       z     = true
    // loop breaker: [3]
  */

rule (modulo E) BLM_ISSUE_CERT_3:
   [
   In( ltpkD ), !PubParams( n, k, t ),
   L_Sigs_Check_List( $D, Did, ltpkD, Sigs_Checked ), !Ltk( $B, ltkB ),
   Blog( $B, blog )
   ]
  --[
  Eq( ('nil'+k), Sigs_Checked ), Uniq( <'IssueCert', $D, Did, ltpkD> ),
  Is_Type( 'BLM', $B ), Accept( $D, Did, ltpkD, Sigs_Checked )
  ]->
   [
   Blog( $B,
         (blog+<sign(<'ValidCert', $D, Did, ltpkD>, ltkB), $D, Did, 'Valid'>)
   )
   ]

  // loop breaker: [4]
  /* has exactly the trivial AC variant */

rule (modulo E) DOMAIN_REQUEST_REVOKE_SIG_0:
   [ !Pk( $D, ltpkD ), !DomainInfo( $D, Did ) ]
  --[ Is_Type( 'Domain', $D ) ]->
   [ Out( <$D, $CA, 'RevokeCert', $D, Did, ltpkD> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) CA_GENERATE_REVOKE_SIG_1:
   [
   In( <$D, $CA, 'RevokeCert', $D, Did, ltpkD> ), !Ltk( $CA, ltkCA ),
   !Pk( $D, ltpkD ), !DomainInfo( $D, Did )
   ]
  --[
  Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
  Uniq( <'ObtainRevokeSig', $D, Did, $CA> )
  ]->
   [ Out( <$CA, $D, sign(<'RevokeCert', $D, Did, ltpkD>, ltkCA)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) BLM_CHECK_CERT_REVOKE_REQUEST_2:
   [
   In( Sig ), In( ltpkD ), In( Did ),
   L_Sigs_Revoke_Check_List( $D, Did, ltpkD, Sigs_Checked ),
   !Pk( $CA, ltpkCA )
   ]
  --[
  Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
  Uniq( <'BLM_CheckRevokeSig', $D, Did, $CA> ),
  Eq( verify(Sig, <'RevokeCert', $D, Did, ltpkD>, ltpkCA), true )
  ]->
   [ L_Sigs_Revoke_Check_List( $D, Did, ltpkD, ('1'+Sigs_Checked) ) ]

  // loop breaker: [3]
  /*
  rule (modulo AC) BLM_CHECK_CERT_REVOKE_REQUEST_2:
     [
     In( Sig ), In( ltpkD ), In( Did ),
     L_Sigs_Revoke_Check_List( $D, Did, ltpkD, Sigs_Checked ),
     !Pk( $CA, ltpkCA )
     ]
    --[
    Is_Type( 'Domain', $D ), Is_Type( 'CA', $CA ),
    Uniq( <'BLM_CheckRevokeSig', $D, Did, $CA> ), Eq( z, true )
    ]->
     [ L_Sigs_Revoke_Check_List( $D, Did, ltpkD, ('1'+Sigs_Checked) ) ]
    variants (modulo AC)
    1. $D    = $D.19
       Did   = Did.20
       Sig   = Sig.21
       ltpkCA
             = ltpkCA.23
       ltpkD = ltpkD.24
       z     = verify(Sig.21, <'RevokeCert', $D.19, Did.20, ltpkD.24>,
                      ltpkCA.23)
    
    2. $D    = $D.49
       Did   = Did.50
       Sig   = sign(<'RevokeCert', $D.49, Did.50, ltpkD.54>, x.95)
       ltpkCA
             = pk(x.95)
       ltpkD = ltpkD.54
       z     = true
    // loop breaker: [3]
  */

rule (modulo E) BLM_REVOKE_CERT_3:
   [
   In( ltpkD ), !PubParams( n, k, t ),
   L_Sigs_Revoke_Check_List( $D, Did, ltpkD, Sigs_Checked ),
   !Ltk( $B, ltkB ), Blog( $B, blog )
   ]
  --[
  Eq( ('nil'+t), Sigs_Checked ), Is_Type( 'BLM', $B ),
  IsIn( <sign(<'ValidCert', $D, Did, ltpkD>, ltkB), $D, Did, 'Valid'>, blog
  ),
  Eq( (blog_new+
       <sign(<'ValidCert', $D, Did, ltpkD>, ltkB), $D, Did, 'Valid'>),
      blog
  ),
  Uniq( <'RevokeCert', $D, Did, ltpkD> ),
  Accept_Revoke( $D, Did, ltpkD, Sigs_Checked )
  ]->
   [
   Blog( $B,
         (blog_new+
          <sign(<'InvalidCert', $D, Did, ltpkD>, ltkB), $D, Did, 'Invalidated'>)
   )
   ]

  // loop breaker: [4]
  /* has exactly the trivial AC variant */

rule (modulo E) VALID_CERT_PRIVATE_KEY_TEST:
   [ !Pk( $B, ltpkB ), Blog( $B, blog ) ]
  --[
  Is_Type( 'BLM', $B ), IsIn( <Sig, $D, Did, 'Valid'>, blog ),
  Eq( verify(Sig, <'ValidCert', $D, Did, ltpkD>, ltpkB), true ),
  Accept_Cert( $D, Did, ltpkD )
  ]->
   [ Blog( $B, blog ) ]

  // loop breaker: [1]
  /*
  rule (modulo AC) VALID_CERT_PRIVATE_KEY_TEST:
     [ !Pk( $B, ltpkB ), Blog( $B, blog ) ]
    --[
    Is_Type( 'BLM', $B ), IsIn( <Sig, $D, Did, 'Valid'>, blog ),
    Eq( z, true ), Accept_Cert( $D, Did, ltpkD )
    ]->
     [ Blog( $B, blog ) ]
    variants (modulo AC)
    1. $D    = $D.17
       Did   = Did.18
       Sig   = Sig.19
       ltpkB = ltpkB.21
       ltpkD = ltpkD.22
       z     = verify(Sig.19, <'ValidCert', $D.17, Did.18, ltpkD.22>, ltpkB.21)
    
    2. $D    = $D.23
       Did   = Did.24
       Sig   = sign(<'ValidCert', $D.23, Did.24, ltpkD.28>, x.43)
       ltpkB = pk(x.43)
       ltpkD = ltpkD.28
       z     = true
    // loop breaker: [1]
  */

lemma valid_cert_issued_less_than_k_CAs_compromised:
  all-traces
  "∀ D Did ltpkD ltkD Sigs #i1 #i6.
    ((((((Accept( D, Did, ltpkD, Sigs ) @ #i1) ∧
         (¬(∃ #i2 Compromised_CA_List.
             K_CAs_Compromised( Compromised_CA_List ) @ #i2))) ∧
        (¬(∃ #i3 B ltkB. Compromise_BLM( B, ltkB ) @ #i3))) ∧
       (¬(∃ #i4. Compromise_Domain( D, ltkD ) @ #i4))) ∧
      (Accept_Cert( D, Did, ltpkD ) @ #i6)) ∧
     (ltpkD = pk(ltkD))) ⇒
    (¬(∃ #i5. !KU( ltkD ) @ #i5))"
/*
guarded formula characterizing all counter-examples:
"∃ D Did ltpkD ltkD Sigs #i1 #i6.
  (Accept( D, Did, ltpkD, Sigs ) @ #i1) ∧
  (Accept_Cert( D, Did, ltpkD ) @ #i6) ∧
  (ltpkD = pk(ltkD))
 ∧
  (∀ #i2 Compromised_CA_List.
    (K_CAs_Compromised( Compromised_CA_List ) @ #i2) ⇒ ⊥) ∧
  (∀ #i3 B ltkB. (Compromise_BLM( B, ltkB ) @ #i3) ⇒ ⊥) ∧
  (∀ #i4. (Compromise_Domain( D, ltkD ) @ #i4) ⇒ ⊥) ∧
  (∃ #i5. (!KU( ltkD ) @ #i5))"
*/
simplify
solve( !PubParams( n, k, t ) ▶₁ #i1 )
  case INIT_SYSTEM_PARAMS
  solve( !KU( pk(ltkD) ) @ #vk )
    case DOMAIN_REQUEST_REVOKE_SIG_0
    solve( !KU( ~ltkD ) @ #i5 )
      case COMPROMISE_DOMAIN
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.18 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case DOMAIN_REQUEST_SIG_0
    solve( !KU( ~ltkD ) @ #i5 )
      case COMPROMISE_DOMAIN
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.18 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.9 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.12 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.15 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_BLM
    solve( !KU( ~ltkB ) @ #i5 )
      case COMPROMISE_BLM
      by contradiction /* from formulas */
    qed
  next
    case INIT_CA_case_1
    solve( !KU( ~ltkCA ) @ #i5 )
      case COMPROMISE_CA
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
               ) @ #vk.13 )
          case c_sign
          solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                 ) ▶₃ #vr.3 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_CA_case_2
    solve( !KU( ~ltkCA ) @ #i5 )
      case COMPROMISE_CA
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
               ) @ #vk.13 )
          case c_sign
          solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                 ) ▶₃ #vr.3 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_CA_case_3
    solve( !KU( ~ltkCA ) @ #i5 )
      case COMPROMISE_CA
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
               ) @ #vk.13 )
          case c_sign
          solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                 ) ▶₃ #vr.3 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_CA_case_4
    solve( !KU( ~ltkCA ) @ #i5 )
      case COMPROMISE_CA
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.16 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.16 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.16 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
               ) @ #vk.14 )
          case c_sign
          solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                 ) ▶₃ #vr.3 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.16 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_CA_case_5
    solve( !KU( ~ltkCA ) @ #i5 )
      case COMPROMISE_CA
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.20 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.28 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.33 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.31 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.29 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.26 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.24 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
               ) @ #vk.15 )
          case c_sign
          solve( !KU( ~ltkCA.1 ) @ #vk.21 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                     ) @ #vk.27 )
                case c_sign
                solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.3)
                           ) @ #vk.32 )
                      case c_sign
                      solve( !KU( ~ltkCA.3 ) @ #vk.34 )
                        case COMPROMISE_CA
                        by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                           ) @ #vk.30 )
                      case c_sign
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.9 )
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
                     ) @ #vk.25 )
                case c_sign
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.6 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA)
               ) @ #vk.13 )
          case c_sign
          solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'1'+'nil')
                 ) ▶₃ #vr.3 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.24 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.29 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.27 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.1)
                   ) @ #vk.22 )
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkCA)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      by solve( L_Sigs_Check_List( $D, Did, pk(~ltkCA), 'nil' ) ▶₃ #vr.7 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case INIT_DOMAIN
    solve( !KU( ~ltkD ) @ #i5 )
      case COMPROMISE_DOMAIN
      solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'1'+'nil')
             ) ▶₂ #i1 )
        case BLM_CHECK_CERT_REQUEST_2_case_1
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_2
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_3
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_4
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.18 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.24 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case BLM_CHECK_CERT_REQUEST_2_case_5
        solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA) ) @ #vk.10 )
          case CA_GENERATE_SIG_1
          by contradiction /* from formulas */
        next
          case c_sign
          solve( !KU( ~ltkCA ) @ #vk.17 )
            case COMPROMISE_CA
            solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'1'+'nil')
                   ) ▶₃ #vr.3 )
              case BLM_CHECK_CERT_REQUEST_2_case_1
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_2
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_3
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.28 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case BLM_CHECK_CERT_REQUEST_2_case_4
              solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.1)
                     ) @ #vk.23 )
                case CA_GENERATE_SIG_1
                by contradiction /* from formulas */
              next
                case c_sign
                solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                  case COMPROMISE_CA
                  solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), ('1'+'nil') ) ▶₃ #vr.6 )
                    case BLM_CHECK_CERT_REQUEST_2_case_1
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_2
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  next
                    case BLM_CHECK_CERT_REQUEST_2_case_3
                    solve( !KU( sign(<'DomainCert', $D, Did, pk(~ltkD)>, ~ltkCA.2)
                           ) @ #vk.29 )
                      case CA_GENERATE_SIG_1
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                        case COMPROMISE_CA
                        solve( L_Sigs_Check_List( $D, Did, pk(~ltkD), 'nil' ) ▶₃ #vr.9 )
                          case INIT_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case c_pk
    solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'1'+'nil')
           ) ▶₂ #i1 )
      case BLM_CHECK_CERT_REQUEST_2_case_1
      solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA) ) @ #vk.10 )
        case CA_GENERATE_SIG_1
        solve( !KU( ~Did ) @ #vk.13 )
          case DOMAIN_REQUEST_REVOKE_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case DOMAIN_REQUEST_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case INIT_DOMAIN
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_sign
        solve( !KU( ~ltkCA ) @ #vk.17 )
          case COMPROMISE_CA
          solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'nil') ) ▶₃ #vr.1 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case BLM_CHECK_CERT_REQUEST_2_case_2
      solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA) ) @ #vk.10 )
        case CA_GENERATE_SIG_1
        solve( !KU( ~Did ) @ #vk.13 )
          case DOMAIN_REQUEST_REVOKE_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case DOMAIN_REQUEST_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case INIT_DOMAIN
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_sign
        solve( !KU( ~ltkCA ) @ #vk.17 )
          case COMPROMISE_CA
          solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'nil') ) ▶₃ #vr.1 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case BLM_CHECK_CERT_REQUEST_2_case_3
      solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA) ) @ #vk.10 )
        case CA_GENERATE_SIG_1
        solve( !KU( ~Did ) @ #vk.13 )
          case DOMAIN_REQUEST_REVOKE_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case DOMAIN_REQUEST_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case INIT_DOMAIN
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_sign
        solve( !KU( ~ltkCA ) @ #vk.17 )
          case COMPROMISE_CA
          solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'nil') ) ▶₃ #vr.1 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case BLM_CHECK_CERT_REQUEST_2_case_4
      solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA) ) @ #vk.10 )
        case CA_GENERATE_SIG_1
        solve( !KU( ~Did ) @ #vk.13 )
          case DOMAIN_REQUEST_REVOKE_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case DOMAIN_REQUEST_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case INIT_DOMAIN
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_sign
        solve( !KU( ~ltkCA ) @ #vk.18 )
          case COMPROMISE_CA
          solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'nil') ) ▶₃ #vr.1 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.24 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.21 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.24 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.21 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.24 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.21 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.24 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.21 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case BLM_CHECK_CERT_REQUEST_2_case_5
      solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA) ) @ #vk.10 )
        case CA_GENERATE_SIG_1
        solve( !KU( ~Did ) @ #vk.13 )
          case DOMAIN_REQUEST_REVOKE_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case DOMAIN_REQUEST_SIG_0
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        next
          case INIT_DOMAIN
          solve( !KU( ~ltkD ) @ #i5 )
            case COMPROMISE_DOMAIN
            by contradiction /* from formulas */
          qed
        qed
      next
        case c_sign
        solve( !KU( ~ltkCA ) @ #vk.17 )
          case COMPROMISE_CA
          solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'1'+'nil') ) ▶₃ #vr.1 )
            case BLM_CHECK_CERT_REQUEST_2_case_1
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_2
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_3
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.25 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.30 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.28 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.24 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case BLM_CHECK_CERT_REQUEST_2_case_4
            solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.1)
                   ) @ #vk.23 )
              case CA_GENERATE_SIG_1
              solve( !KU( ~Did ) @ #vk.20 )
                case DOMAIN_REQUEST_REVOKE_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case DOMAIN_REQUEST_SIG_0
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              next
                case INIT_DOMAIN
                solve( !KU( ~ltkD ) @ #i5 )
                  case COMPROMISE_DOMAIN
                  by contradiction /* from formulas */
                qed
              qed
            next
              case c_sign
              solve( !KU( ~ltkCA.1 ) @ #vk.26 )
                case COMPROMISE_CA
                solve( L_Sigs_Check_List( $D, Did, pk(ltkD), ('1'+'nil') ) ▶₃ #vr.4 )
                  case BLM_CHECK_CERT_REQUEST_2_case_1
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_2
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case BLM_CHECK_CERT_REQUEST_2_case_3
                  solve( !KU( sign(<'DomainCert', $D, Did, pk(ltkD)>, ~ltkCA.2)
                         ) @ #vk.29 )
                    case CA_GENERATE_SIG_1
                    solve( !KU( ~Did ) @ #vk.25 )
                      case DOMAIN_REQUEST_REVOKE_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case DOMAIN_REQUEST_SIG_0
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    next
                      case INIT_DOMAIN
                      solve( !KU( ~ltkD ) @ #i5 )
                        case COMPROMISE_DOMAIN
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~ltkCA.2 ) @ #vk.31 )
                      case COMPROMISE_CA
                      solve( L_Sigs_Check_List( $D, Did, pk(ltkD), 'nil' ) ▶₃ #vr.7 )
                        case INIT_DOMAIN
                        solve( !KU( ~ltkD ) @ #i5 )
                          case COMPROMISE_DOMAIN
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/*
WARNING: the following wellformedness checks failed!

unbound:
  rule `BLM_REVOKE_CERT_3' has unbound variables: 
    blog_new
  
  rule `VALID_CERT_PRIVATE_KEY_TEST' has unbound variables: 
    Did, Sig, ltpkD
*/

end

==============================================================================
summary of summaries:

analyzed: BKI-proof.spthy

  WARNING: 2 wellformedness check failed!
           The analysis results might be wrong!
  
  valid_cert_issued_less_than_k_CAs_compromised (all-traces): verified (3382 steps)

==============================================================================
